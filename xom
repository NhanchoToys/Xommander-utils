#!/bin/bash
# Xommander-utils
# By Tekin-Miz(WorldMoZara)
source lang/en_utf-8.lang
source lang/zh_utf-8.lang
if [ "$LD_PRELOAD" = '/data/data/com.termux/files/usr/lib/libtermux-exec.so' ]
then
    istermux=1
fi
mkdir -p $TMPDIR/xom
function main(){
    dialog --title "$title" --no-cancel --stderr --menu "$mainmenu_text" 16 55 10 1 "$mainmenu_opt1" 2 "$mainmenu_opt2" 3 "$mainmenu_opt3" 4 "$mainmenu_exit" 2>$TMPDIR/xom/mainopt
    main_opt=$(cat $TMPDIR/xom/mainopt)
    case "$main_opt" in
        1)
            tools
            ;;
        2)
            vision
            ;;
        3)
            extras
            ;;
        4)
            dialog --clear
            clear -x
            exit 0
            ;;
        *)
            ;;
    esac
    rm $TMPDIR/xom/mainopt
}
function tools(){
    dialog --title "$title" --stderr --menu "$toolmenu_text" 16 55 10 1 "$toolmenu_opt1" 2 "$toolmenu_opt2" 2>$TMPDIR/xom/toolopt
    if [ $? -ne 0 ]
    then
        rm $TMPDIR/xom/toolopt
        main
    else
        tool_opt=$(cat $TMPDIR/xom/toolopt)
        case $tool_opt in
            1)
                cp -f $(realpath $(dirname $0))/tools/.init.rc ~/
                if test -e $PREFIX/bin/bash
                then
                    echo -e "\nsource ~/.init.rc" >> ~/.bashrc
                fi
                if test -e $PREFIX/bin/zsh
                then
                    echo -e "\nsource ~/.init.rc" >> ~/.zshrc
                fi
                if test -e $PREFIX/bin/fish
                then
                    mkdir -p $PREFIX/etc/fish
                    echo -e "\nsource ~/.init.rc" >> $PREFIX/etc/fish/config.fish
                fi
                tools
                ;;
            2)
                ;;
            *)
                ;;
        esac
        rm $TMPDIR/xom/toolopt
    fi
}
function vision(){
    dialog --title "$title" --stderr --menu "$toolmenu_text" 16 55 10 1 "$visimenu_opt1" 2 "$visimenu_opt2" 3 "$visimenu_opt3" 2>$TMPDIR/xom/visiopt
    if [ $? -ne 0 ]
    then
        rm $TMPDIR/xom/visiopt
        main
    else
        visi_opt=$(cat $TMPDIR/xom/visiopt)
        case $visi_opt in
            1)
                uvimrc awesome
                vision
                ;;
            2)
                uvimrc basic
                vision
                ;;
            3)
                dialog --title "$title" --stderr --defaultno --yesno "$uvimrc_warn" 16 55
                if [ $? -eq 0 ]
                then
                    progress "$download" 0
                    git clone https://github.com/gpakosz/.tmux.git ~/.tmux
                    progress "$install" 76
                    ln -s -f .tmux/.tmux.conf ~/.tmux.conf
                    cp .tmux/.tmux.conf.local ~/
                    progress "$complete" 100
                    sleep 1s
                fi
                vision
                ;;
            *)
                ;;
        esac
        rm $TMPDIR/xom/visiopt
    fi
}
function extras(){
    dialog --title "$title" --stderr --menu "$extramenu_text" 16 55 10 1 "$extramenu_opt1" 2 "$extramenu_opt2" 2>$TMPDIR/xom/extraopt
    if [ $? -ne 0 ]
    then
        rm $TMPDIR/xom/extraopt
        main
    else
        extra_opt=$(cat $TMPDIR/xom/extraopt)
        case $extra_opt in
            1)
                if [ $istermux -eq 1 ]
                then
                    termux
                else
                    dialog --title "$title" --defaultno --stderr --yesno "$termux_warn" 16 55
                    if [ $? -eq 0 ]
                    then
                        termux
                    else
                        extras
                    fi
                    :
                fi
                ;;
            2)
                ;;
            *)
                ;;
        esac
        rm $TMPDIR/xom/extraopt
    fi
}
function uvimrc(){
    dialog --title "$title" --stderr --defaultno --yesno "$uvimrc_warn" 16 55
    if [ $? -eq 0 ]
    then
        case $1 in
            awesome)
                progress "$download" 0
                git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
                progress "$install" 30
                sh ~/.vim_runtime/install_awesome_vimrc.sh
                progress "$installed" 100
                sleep 1s
                ;;
            basic)
                progress "$download" 0
                git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
                progress "$install" 80
                sh ~/.vim_runtime/install_basic_vimrc.sh
                progress "$installed" 100
                sleep 1s
                ;;
            *)
                ;;
        esac
    fi
    vision
}
function termux(){
    dialog --title "$title" --stderr --menu "$toolmenu_text" 16 55 10 0 "$termuxmenu_opt0" 1 "$termuxmenu_opt1" 2 "$termuxmenu_opt2" 2>$TMPDIR/xom/termuxopt
    if [ $? -ne 0 ]
    then
        rm $TMPDIR/xom/termuxopt
        extras
    else
        termux_opt=$(cat $TMPDIR/xom/termuxopt)
        case $termux_opt in
            0)
                progress "$dependency" 0
                apt-get update >> /dev/null
                apt-get install termux-tools >> /dev/null
                progress "$run" 60
                termux-setup-storage
                progress "$complete" 100
                sleep 1s
                termux
                ;;
            1)
                extkeys
                ;;
            2)
                dialog --title "$title" --stderr --defaultno --yesno "$uvimrc_warn" 16 55
                if [ $? -eq 0 ]
                then
                    progress "$dependency" 0
                    apt update >> /dev/null
                    apt-get install curl >> /dev/null
                    progress "$install" 10
                    cd ~
                    sh -c "$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)"
                    cd $OLDPWD
                    progress "$installed" 100
                    sleep 1s
                    termux
                fi
                termux
                ;;
            *)
                ;;
        esac
        rm $TMPDIR/xom/termuxopt
    fi
}
function extkeys(){
    dialog --title "$title" --stderr --menu "$extramenu_text" 16 55 10 1 "$extkeymenu_opt1" 2 "$extkeymenu_opt2" 2>$TMPDIR/xom/extkeyopt
    if [ $? -ne 0 ]
    then
        rm $TMPDIR/xom/extkeyopt
        termux
    else
        extkey_opt=$(cat $TMPDIR/xom/extkeyopt)
        case $extkey_opt in
            1)
                progress "$run" 0
                mkdir ~/.termux >> /dev/null
                progress "$run" 50
                echo "\nextra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']];\n" >> ~/.termux/termux.properties
                progress "$complete" 100
                sleep 1s
                termux
                ;;
            2)
                progress "$run" 0
                mkdir ~/.termux >> /dev/null
                progress "$run" 50
                echo "\nextra-keys = [['ESC','TAB','/','HOME','UP','END','PGUP','DEL','+','BKSP'],['CTRL','ALT','FN','LEFT','DOWN','RIGHT','PGDN',':','-','ENTER']];\n"
                progress "$complete" 100
                sleep 1s
                termux
                ;;
            *)
                ;;
        esac
        rm $TMPDIR/xom/extkeyopt
    fi
}
function progress(){
    # $1 - Text
    # $2 - Progress
    echo $2 | dialog --title "$title" --gauge "$1" 10 58
}
main
